Simple project written in Python to replicate the most common parts of dd.
Inspired by: https://code.activestate.com/recipes/578907-python-awesome-dd/

Mostly for educational purposes - a means for me to learn about reading
from and writing to block devices at various locations, and to help
others learn.

The intent is to not have it use any external python libraries, and
remain relatively simple.

I'll also try to keep this down to a single file, so it can be placed
in /usr/local/bin without requiring a package or other supporting python
modules to be placed in /usr/local/bin as well.

This was written to run on Linux. Any distribution with Python3 should
work. I'll also probably try this on my Mac at work at some point,
so that should work too. I'm not sure if it will work on Windows -
if it doesn't, let me know. 

Install Instructions:
    $ sudo cp -v pydd.py /usr/local/bin/pydd
    $ sudo chown root:root /usr/local/bin/pydd
    $ sudo chmod 755 /usr/local/bin/pydd

    You can now run the 'pydd' command from your terminal

Uninstall Instructions:
    $ sudo rm -v /usr/local/bin/pydd

I tried to replicate the args of dd, except for the fact that I'm using
argparse, which requires optional args to use the "--" prefix, so instead
of dd's if= and of=, you'll need to do --if= and --of=.

To Do:
    1. Show progress bar as it writes
    2. What happens if user requests that we read more data than the
        source has?

        For sources of known sizes (files, block devices), we can figure
        this out pretty quick, and error out.

        For sources of unknown sizes (character devices, like a pipe),
        we can NOT figure this out quickly, so at some point, during
        the read, we're going to run out of data.

Note:
    I hope to finish this at some point.

    Any proposed improvements are welcome, as long as they:
        - Don't use external python libraries
        - Don't create additional Python modules
            I want to keep this a single file

    If you are trying to understand any part of how this works, and
    have questions, send me a message and I'll try to find some time to
    explain anything you'd like.
